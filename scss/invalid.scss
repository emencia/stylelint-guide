/*
 *Multiline comment need one space before text
 */

//Single line comment need one space before text

// Always use double quote
@import 'settings';

// Empty block is forbidden
.empty{}

// Rules need to be separated with one empty line
.foo1{
    font-size: 1rem;
}
.foo2{
    font-size: 1rem;
}

// No more than 2 empty lines between rules
.foo3{
    font-size: 1rem;
}



.foo4{
    font-size: 1rem;
}

// No selector duplication in the same stylesheet
.foo4{
    font-size: 1rem;
}

// Descendant selector must be on the same line separated with 1 space
.mip
.map{
    font-size: 1rem;
}

// Required indentation is allways 4 spaces
.bar{
  .nope1{font-size: 1rem;}
        .nope2{font-size: 1rem;}
}

.ping{
    // Pseudo element always with double ":"
    &:after{
        font-size: 1rem;
    }
}

// Combinator (+, >, ~, etc..) allways separated with spaces around
.pong{
    &+ .pang{
        font-size: 1rem;
    }

    & >.pung{
        font-size: 1rem;
    }

    &~.pyng{
        font-size: 1rem;
    }
}

// Properties
.props{
    WIDTH: 1px; // Property name is allways lowercase
}

// Values
.values{
    display: BLOCK; // Value name is allways lowercase
}

// Colors
.colors{
    $black: #000; // Short hexa is invalid
    color: white; // Name shortcut is invalid
    border-right-color: rgb(#FF0000); // Lowercase only
}

// Numbers
.numbers{
    line-height: .5; // Leading 0 required when below 1
}

// Declarations
.a { color: #ffffff; } // No space around

.b { color: #ffffff; top: 0; } // No multiple declaration on single line

.c {
    color: #ffffff; top: 0;
}


.declarations{
    font-weight :normal; // No space before declaration
    font-size:1rem; // 1 space required after declaration
    // Declaration must ends with a semi colon
    font-size: 1rem
}

// Blocks
a { color: #ffffff; }b { color: #000000; }

// Correct unit type are required
.units{
    font-size: 1pixels;
    line-height: 1im;
}

// Operators
a[target=_blank] {} // Double quotes are required
a[href = "#"] {} // No space between
input[ type="submit" ] {} // No space around

// @extend usage is forbidden
.no-extend{
    @extend .units;
}

// Variables respect other rules
$var1: 'wrong';
$var2: 1pixels;

// General
.meh{
    display: block;; // Extra semicolon is invalid
}
